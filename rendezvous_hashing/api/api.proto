syntax = "proto3";
package api;
option go_package = "../rendezvous_hashing/api";

import "google/protobuf/duration.proto";

service Node {
  rpc Health(HealthRequest) returns (HealthResponse) {}
  rpc Info(InfoRequest) returns (stream InfoResponse) {}
  rpc Get(GetRequest) returns (NodeGetResponse) {}
  rpc Set(NodeSetRequest) returns (SetResponse) {}
}

service Cluster {
  rpc Get(GetRequest) returns (GetResponse) {}
  rpc Set(SetRequest) returns (SetResponse) {}
}

service Clock {
  rpc Get(ClockGetRequest) returns (ClockGetResponse) {}
  rpc Set(ClockSetRequest) returns (ClockSetResponse) {}
}

enum Health {
  DEFAULT = 0;
  ONLINE = 1;
}

message HealthRequest { }
message HealthResponse {
  string node_id = 1;
  Health status = 2;
  google.protobuf.Duration uptime = 3;
}

message InfoRequest { }
message InfoResponse {
  string node_id = 1;
  google.protobuf.Duration uptime = 2;
  repeated string keys = 3;
}

message GetRequest {
  string key = 1;
}
message GetResponse {
  Entry entry = 1;
}

message SetRequest {
  Entry entry = 1;
}
message SetResponse { }

message Entry {
  string key = 1;
  string value = 2;
}

message NodeGetResponse {
  ClockedEntry clocked_entry = 1;
}

message NodeSetRequest {
  ClockedEntry clocked_entry = 1;
}

message ClockedEntry {
  Entry entry = 1;
  ClockValue clock = 2;
}

message ClockGetRequest { }
message ClockGetResponse {
  ClockValue value = 1;
}

message ClockSetRequest {
  ClockValue value = 1;
}
message ClockSetResponse { }

message ClockValue {
  uint64 epoch = 1;
  uint64 clock = 2;
}